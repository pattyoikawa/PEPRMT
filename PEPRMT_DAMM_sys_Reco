function  [NEE_mod, S1, S2, Reco_mod] = PEPRMT_DAMM_sys_Reco(param,xdata)
%Patty Oikawa Sept 2015
%See Oikawa et al. 2015 Farming carbon instead of corn: A biogeochemical model for carbon market-funded wetland restoration
%for detailed information about the model and all references

%Outputs:
%modeled Net ecosystem exchange CO2 (umol m-2 s-1)
%Dynamic soil organic C pool (S1) (umol m-3)
%Dynamic labile soil C pool (S2) (umol m-3)
%modeled Reco (umol m-2 s-1)

%Inputs:
%parameter values (param)
%set to 0's and 1's if unknown 
%param=[0,1,0,1];

%xdata are exogenous variables in 30min temporal resolution
Time =xdata(:,1);%Day of year variable that runs continuously
DOY_disc=xdata(:,2);%Day of year variable that goes from 1-365; if multiple years are used make sure DOY_disc does not exceed 365
TA = xdata(:,3);%Air temperature (C)
WT = xdata(:,4);%water table height (cm)
%PAR = xdata(:,5);%do not need for Reco
%LAI = xdata(:,6);%do not need for Reco
GPP = xdata(:,7);%MODELED GPP (umol m-2 30min-1) where negative values are C uptake by the system
    
%Static C allocation theme
GPPsum_avail = 0.5*(GPP*-1*60*30);%Available GPP (umol m-2 30min-1); give respirers access to half of GPP

%Set up parameters for Reco computation
alpha1 = 3e3;%pre-exponential factor (umol m-2 s-1); SET AS CONSTANT
ea1 = (param(1)+18)*1000; %Activation energy for SOM C pool (J mol-1)
km1 = param(2)*1e-6; %half-saturation concentration (Km) for SOM C pool (umol m-2)

alpha2 = 3e3;%pre-exponential factor (umol m-2 s-1); SET AS CONSTANT
ea2 = (param(3)+17.5)*1000; %Activation energy for labile C pool(J mol-1)
km2 = param(4)*1e-6; %half-saturation concentration (Km) for labile C pool (umol m-2)

R = 8.314;%gas constant (J K-1 mol-1)
RT = R .* (TA + 274.15);%Air temp in Kelvin-all units cancel out
Vmax1 = alpha1 .* exp(-ea1./RT);%maximum rate of enzyme reaction for SOM pool (umol m-2 s-1)
Vmax2 = alpha2 .* exp(-ea2./RT);%maximum rate of enzyme reaction for labile pool (umol m-2 s-1)

%initialize C pools
C1_init = 6e8;%20% of Initial SOC pool-measured (umol m-3) Assume only 20% of pool is labile and avail to microbes
C2_init = 0;% initial labile C pool (umol m-3); assume 0 at beginning of year

%parameters used to inhibit Reco when WT is above the soil surface (Oikawa
%et al. 2015)
  a1=0.00033;
  a2=0.0014;
  a3=0.75;

%Create season vector for deciding when to drop recently fixed C into
%SOM C pool; Autumn=3 and winter=1; all other time of year is 2
Season_drop=zeros(1,length(GPP))';
Sel=DOY_disc<=88;
Season_drop(Sel)=1;%WINTER
Sel=DOY_disc<=265&DOY_disc>88;
Season_drop(Sel)=2;%Spring/summer
Sel=DOY_disc<=335&DOY_disc>265;
Season_drop(Sel)=3;%AUTUMN
Sel=DOY_disc<=366&DOY_disc>335;
Season_drop(Sel)=1;%WINTER AGAIN

%preallocating space
S1sol = zeros(1,length(Time));
S2sol = zeros(1,length(Time));
R1 = zeros(1,length(Time));
R2 = zeros(1,length(Time));
S1=zeros(1,length(Time));
S2=zeros(1,length(Time));
percent_reduction=zeros(1,length(Time));
Reco_mod=zeros(1,length(Time));
Reco_full=zeros(1,length(Time));
C2in=zeros(1,length(Time));

for t = 1:length(Time);
%C allocation
    C2in(t)  = GPPsum_avail(t);
    if (t == 1)
        S1(t) = C1_init ;%SOM pool
        S2(t) = C2_init + C2in(t) ; % labile C pool
    else
        S1(t) = S1sol(t-1);
        S2(t) = S2sol(t-1);
    end

 
%Use separate eq for diff substrate pools (Davidson et al. 2012)
R1(t) = Vmax1(t) .* S1(t) ./(km1 + S1(t)); %Respiration from SOM pool (umol m-2 s-1)
R2(t) = Vmax2(t) .* S2(t) ./(km2 + S2(t)); %Respiration from labile C pool (umol m-2 s-1)
%cannot have negative respiration
    if R1(t)<0
        R1(t)=0;
    end
    if R2(t)<0
        R2(t)=0;
    end
 
%Reco is reduced by 25% when WT is at or above soil surface (McNicol et al.
%2015)
percent_reduction(t)=(a1*WT(t).^2)-(a2*WT(t))+a3;
if WT(t)>5
    percent_reduction(t)=0.75;
end
if percent_reduction(t)>1.25
   percent_reduction(t)=1.25;
end
if percent_reduction(t)<0.75
   percent_reduction(t)=0.75;
end

%correct respiration rates for inhibition due to WT height
R1(t) = R1(t)*percent_reduction(t) ; %Respiration from SOM pool (umol m-2 s-1)
R2(t) = R2(t)*percent_reduction(t); %Respiration from labile C pool (umol m-2 s-1)
   
%adjust dynamic C pools
    if (t==1)
        S1sol(t) = C1_init - (R1(t)*60*30);%accounts for depletion of C sources in soil due to Reco
        S2sol(t) = (C2_init+C2in(t)) - (R2(t)*60*30);
    else
        S1sol(t) = S1sol(t-1) - (R1(t)*60*30);
        S2sol(t) = (S2sol(t-1)+C2in(t))- (R2(t)*60*30);
    end
    %C pools cannot be negative
    if S1sol(t)<0
        S1sol(t)=0;
    end
    if S2sol(t)<0
        S2sol(t)=0;
    end
    
if Season_drop(t)>2%in autumn time, labile PS C pool slowly empties into SOM pool
        S1sol(t) = S1sol(t)+(0.2*S2sol(t));
        S2sol(t) = S2sol(t)-(0.2*S2sol(t));
end

if Season_drop(t)<2%in winter time all of the labile PS C pool empties into SOM pool
        S1sol(t) = S1sol(t)+(S2sol(t));
        S2sol(t) = 0;
end
    
   Reco_mod(t) = R1(t) + R2(t); %Total Reco is the sum of respiration from both C sources (umol m-2 s-1)
   Reco_full(t) = (R1(t)*60*30) + (R2(t)*60*30); %Total Reco (umol m-2 30min-1)
end
NEE_mod=GPP+Reco_mod';%Modeled Net ecosystem exchange CO2 (umol m-2 s-1)

end

  
